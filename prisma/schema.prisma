generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  content   String?
  published Boolean  @default(false)
  authorId  Int
  User      User     @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique
  User   User    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model User {
  id      Int      @id @default(autoincrement())
  name    String?  @db.VarChar(255)
  email   String   @unique @db.VarChar(255)
  Post    Post[]
  Profile Profile?
}

model Movie {
  id              Int    @id @default(autoincrement())
  title           String
  production_year Int
  watch_date      String
  directors       String
}

model Puzzle {
  id      Int               @id @default(autoincrement())
  name    String
  pieces  Int
  entries PuzzleTimeEntry[]
}

model PuzzleTimeEntry {
  id       Int       @id @default(autoincrement())
  start    DateTime  @default(now())
  end      DateTime?
  Puzzle   Puzzle?   @relation(fields: [puzzleId], references: [id])
  puzzleId Int?
}

model TestCounter {
  id    Int @id @default(autoincrement())
  value Int @default(0)
}
